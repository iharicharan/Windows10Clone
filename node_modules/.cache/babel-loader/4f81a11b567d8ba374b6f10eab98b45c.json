{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["F:/home/src/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","email","password","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","name","value","target","handleSubmit","preventDefault","Object","keys","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAIA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAEtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAApC;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;;AAIA,QAAMa,YAAY,GAAGC,KAAK,IAAI;AAE5B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AAEAX,IAAAA,SAAS,CAAC,EAER,GAAGD,MAFK;AAIR,OAACU,IAAD,GAAQC;AAJA,KAAD,CAAT;AAQD,GAZD;;AAgBA,QAAME,YAAY,GAAGJ,KAAK,IAAI;AAE5BA,IAAAA,KAAK,CAACK,cAAN;AAEAT,IAAAA,SAAS,CAACN,QAAQ,CAACC,MAAD,CAAT,CAAT;AAEAO,IAAAA,eAAe,CAAC,IAAD,CAAf;AAED,GARD;;AAYAX,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAImB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAsD;AAEpDR,MAAAA,QAAQ;AAET;AAEF,GARQ,EAQN,CAACM,MAAD,CARM,CAAT;AAYA,SAAO;AAELI,IAAAA,YAFK;AAILK,IAAAA,YAJK;AAMLb,IAAAA,MANK;AAQLI,IAAAA;AARK,GAAP;AAYD,CA9DD;;AAkEA,eAAeP,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n  const [values, setValues] = useState({ email: \"\", password: \"\" });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n\r\n\r\n  const handleChange = event => {\r\n\r\n    const { name, value } = event.target;\r\n\r\n    setValues({\r\n\r\n      ...values,\r\n\r\n      [name]: value\r\n\r\n    });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleSubmit = event => {\r\n\r\n    event.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n\r\n    setIsSubmitting(true);\r\n\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n\r\n      callback();\r\n\r\n    }\r\n\r\n  }, [errors]);\r\n\r\n\r\n\r\n  return {\r\n\r\n    handleChange,\r\n\r\n    handleSubmit,\r\n\r\n    values,\r\n\r\n    errors\r\n\r\n  };\r\n\r\n};\r\n\r\n\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}